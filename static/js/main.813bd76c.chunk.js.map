{"version":3,"sources":["CharacterApp/CharacterList.js","CharacterApp/Film.js","CharacterApp/Name.js","CharacterApp/Character.js","CharacterApp/CharacterApp.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterList","state","isLoading","characters","image","error","fetch","then","response","json","parsedJSON","results","data","setState","catch","message","this","console","log","className","map","character","idx","id","to","src","alt","style","height","name","Component","Film","film","filmUrl","props","content","title","Name","url","Character","match","params","prevProps","films","vehicles","starships","mass","birth_year","gender","hair_color","skin_color","eye_color","homeworld","length","withRouter","CharacterApp","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGqBA,E,4MACjBC,MAAQ,CACJC,WAAW,EACXC,WAAY,GACZC,MAAO,KACPC,MAAO,I,uDAEX,WAAqB,IAAD,OAChBC,MAAM,iCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAAD,OAAgBA,EAAWC,WAChCJ,MAAK,SAAAK,GACF,EAAKC,SAAS,CACVV,WAAYS,EACZV,WAAW,OAGlBY,OAAM,SAACT,GACJ,EAAKQ,SAAS,CACVX,WAAW,EACXG,MAAOA,EAAMU,e,oBAK7B,WACI,MAAgDC,KAAKf,MAA7CC,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,MAAOF,EAA1B,EAA0BA,WAA1B,EAAsCC,MAGtC,OAFAa,QAAQC,IAAIf,GAGR,sBAAKgB,UAAU,sBAAf,UACKjB,GAAa,2CACbG,GAAS,4BAAIA,IACbF,EAAWiB,KAAI,SAACC,EAAWC,GACxB,IAAMC,EAAKD,EAAM,EACjB,OACI,qBAAKH,UAAU,0CAAf,SACI,eAAC,IAAD,CAAMK,GAAE,qBAAgBD,GAAxB,UACI,qBAAKE,IAAG,kBAAaF,EAAb,QAAuBG,IAAI,QAAQP,UAAU,+BAA+BQ,MAAO,CAAEC,OAAQ,OACrG,8BAAMP,EAAUQ,WAHsCP,a,GApC3CQ,aCAtBC,E,4MACjB9B,MAAQ,CACJC,WAAW,EACX8B,KAAM,KACN3B,MAAO,I,uDAGX,WAAqB,IAAD,OACT4B,EAAWjB,KAAKkB,MAAhBD,QAEP3B,MAAM2B,GACD1B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAK,GACF,EAAKC,SAAS,CACVmB,KAAMpB,EACNV,WAAW,OAGlBY,OAAM,SAACT,GACJ,EAAKQ,SAAS,CACVX,WAAW,EACXG,MAAOA,EAAMU,e,oBAK7B,WACI,IAEIoB,EAFJ,EAA8CnB,KAAKf,MAA3CC,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,MAAO2B,EAA1B,EAA0BA,KAA1B,EAAgCX,UAKhC,OAJAJ,QAAQC,IAAIc,GAETA,IAAMG,EAAU,8BAAMH,EAAKI,SAG1B,gCACKlC,GAAa,2CACbG,GAAS,4BAAIA,IACb8B,S,GApCiBL,aCDbO,E,4MACjBpC,MAAQ,CACJC,WAAW,EACXU,KAAM,KACNP,MAAO,I,uDAGX,WAAqB,IAAD,OACRiC,EAAQtB,KAAKkB,MAAbI,IAERhC,MAAMgC,GACD/B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAK,GACF,EAAKC,SAAS,CACVD,KAAMA,EACNV,WAAW,OAGlBY,OAAM,SAACT,GACJ,EAAKQ,SAAS,CACVX,WAAW,EACXG,MAAOA,EAAMU,e,oBAK7B,WACI,IAEIoB,EAFJ,EAAmCnB,KAAKf,MAAhCC,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,MAAOO,EAA1B,EAA0BA,KAK1B,OAJAK,QAAQC,IAAIN,GAERA,IAAQuB,EAAU,+BAAOvB,EAAKiB,QAG9B,qCACK3B,GAAa,2CACbG,GAAS,4BAAIA,IACb8B,S,GApCiBL,aCI5BS,E,4MACFtC,MAAQ,CACJC,WAAW,EACXmB,UAAW,KACXjB,MAAO,KACPC,OAAO,G,EAeXC,MAAQ,WACJ,IAAMiB,EAAK,EAAKW,MAAMM,MAAMC,OAAOlB,GACnC,EAAKV,SAAS,CACVT,MAAM,WAAD,OAAamB,EAAb,UAETjB,MAAM,gCAAD,OAAiCiB,IACjChB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAK,GACF,EAAKC,SAAS,CACVX,WAAW,EACXmB,UAAWT,OAGlBE,OAAM,WACH,EAAKD,SAAS,CACVX,WAAW,EACXG,OAAO,Q,uDA5BvB,WACIW,KAAKV,U,gCAGT,SAAmBoC,GACDA,EAAUF,MAAMC,OAAOlB,KAClBP,KAAKkB,MAAMM,MAAMC,OAAOlB,IAEvCP,KAAKV,U,oBA4Cb,WACI,IACI6B,EACAQ,EACAC,EACAC,EAJJ,EAA+C7B,KAAKf,MAA5CC,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,MAAOgB,EAA1B,EAA0BA,UAAWjB,EAArC,EAAqCA,MA+DrC,OAzDIiB,IACAc,EACI,sBAAKhB,UAAU,WAAWQ,MAAO,CAAEC,OAAQ,KAA3C,UACI,qBAAKH,IAAKrB,EAAOsB,IAAI,QAAQP,UAAU,qCAAqCQ,MAAO,CAAEC,OAAQ,OAC7F,oBAAIT,UAAU,aAAd,SAA4BE,EAAUQ,OACtC,sBAAKV,UAAU,4BAAf,UACI,yCAAYE,EAAUO,UACtB,uCAAUP,EAAUyB,QACpB,6CAAgBzB,EAAU0B,cAC1B,yCAAY1B,EAAU2B,UACtB,6CAAgB3B,EAAU4B,cAC1B,6CAAgB5B,EAAU6B,cAC1B,4CAAe7B,EAAU8B,aACzB,4CAAc,cAAC,EAAD,CAAMb,IAAKjB,EAAU+B,YAAnC,aAIZT,EACI,sBAAKxB,UAAU,OAAf,UACI,mDACA,8BACKE,EAAUsB,MAAMvB,KAAI,SAACkB,EAAKhB,GACvB,OACI,8BACI,cAAC,EAAD,CAAMW,QAASK,GAAUhB,aAOjDsB,EACI,sBAAKzB,UAAU,OAAf,UACI,2CACgC,IAA9BE,EAAUuB,SAASS,OAAiB,oCAAOhC,EAAUuB,SAASxB,KAAI,SAACkB,EAAKhB,GACtE,OACI,8BACI,cAAC,EAAD,CAAMgB,IAAKA,GAAUhB,WAGnB,2CAGtBuB,EACI,sBAAK1B,UAAU,OAAf,UACI,4CACiC,IAA/BE,EAAUwB,UAAUQ,OAAiB,oCAAOhC,EAAUwB,UAAUzB,KAAI,SAACkB,EAAKhB,GACxE,OACI,8BACI,cAAC,EAAD,CAAMgB,IAAKA,GAAUhB,WAGnB,4CAMtB,sBAAKH,UAAU,MAAf,UACKjB,GAAa,2CACbG,GAAS,oEACV,qBAAKc,UAAU,gBAAf,SACKgB,IAEL,sBAAKhB,UAAU,0BAAf,UACKwB,EACAC,EACAC,Y,GAtIGf,aA6ITwB,cAAWf,GCtHXgB,MAzBf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,8BACE,cAAC,IAAD,CAAMK,GAAG,IAAT,oBAEF,eAAC,IAAD,WACE,eAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAlB,UACE,oBAAItC,UAAU,aAAd,sCACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAOsC,KAAK,iBAAZ,UACE,oBAAItC,UAAU,yBAAd,4BACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOsC,KAAK,IAAZ,SACE,gD,MCVGC,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.813bd76c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nexport default class CharacterList extends Component {\n    state = {\n        isLoading: true,\n        characters: [],\n        image: null,\n        error: ''\n    }\n    componentDidMount() {\n        fetch(\"https://swapi.dev/api/people/\")\n            .then(response => response.json())\n            .then((parsedJSON) => parsedJSON.results)\n            .then(data => {\n                this.setState({\n                    characters: data,\n                    isLoading: false,\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoading: false,\n                    error: error.message\n                })\n            });\n    }\n\n    render() {\n        const { isLoading, error, characters, image } = this.state;\n        console.log(characters);\n\n        return (\n            <div className=\"characters-list row\">\n                {isLoading && <p>Loading...</p>}\n                {error && <p>{error}</p>}\n                {characters.map((character, idx) => {\n                    const id = idx + 1;\n                    return (\n                        <div className=\"character col-2 m-2 font-weight-bold h6\" key={idx}>\n                            <Link to={`/character/${id}`}>\n                                <img src={`./image/${id}.jpg`} alt=\"image\" className=\"card-img-top image-fluid p-0\" style={{ height: 300 }} />\n                                <div>{character.name}</div>\n                            </Link>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nexport default class Film extends Component {\n    state = {\n        isLoading: true,\n        film: null,\n        error: ''\n    }\n\n    componentDidMount() {\n        const {filmUrl} = this.props; \n\n        fetch(filmUrl)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    film: data,\n                    isLoading: false\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoading: false,\n                    error: error.message\n                })\n            });\n    }\n\n    render() {\n        const { isLoading, error, film, character } = this.state;\n        console.log(film);\n        let content;\n        if(film){content = <div>{film.title}</div>}\n\n        return (\n            <div>\n                {isLoading && <p>Loading...</p>}\n                {error && <p>{error}</p>}\n                {content}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Name extends Component {\n    state = {\n        isLoading: true,\n        data: null,\n        error: ''\n    }\n\n    componentDidMount() {\n        const { url } = this.props;\n\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    data: data,\n                    isLoading: false\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoading: false,\n                    error: error.message\n                })\n            });\n    }\n\n    render() {\n        const { isLoading, error, data } = this.state;\n        console.log(data);\n        let content;\n        if (data) { content = <span>{data.name}</span> }\n\n        return (\n            <>\n                {isLoading && <p>Loading...</p>}\n                {error && <p>{error}</p>}\n                {content}\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport Film from './Film.js';\nimport Name from './Name.js';\n\nclass Character extends Component {\n    state = {\n        isLoading: true,\n        character: null,\n        image: null,\n        error: false\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    componentDidUpdate(prevProps) {\n        const oldid = prevProps.match.params.id;\n        const incomingid = this.props.match.params.id;\n        if (oldid !== incomingid) {\n            this.fetch();\n        }\n    }\n\n    fetch = () => {\n        const id = this.props.match.params.id\n        this.setState({\n            image: `./image/${id}.jpg`,\n        });\n        fetch(`https://swapi.dev/api/people/${id}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    isLoading: false,\n                    character: data\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    isLoading: false,\n                    error: true\n                });\n            });\n\n    }\n\n    static propTypes = {\n        character: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            height: PropTypes.string.isRequired,\n            birth_year: PropTypes.string.isRequired,\n            gender: PropTypes.string.isRequired,\n            mass: PropTypes.string.isRequired,\n            hair_color: PropTypes.string.isRequired,\n            skin_color: PropTypes.string.isRequired,\n            eye_color: PropTypes.string.isRequired,\n            homeworld: PropTypes.string.isRequired\n        }),\n        isLoading: PropTypes.bool.isRequired,\n        error: PropTypes.bool.isRequired,\n        image: PropTypes.string.isRequired,\n        vehicles: PropTypes.array.isRequired\n    }\n\n    render() {\n        const { isLoading, error, character, image } = this.state;\n        let content;\n        let films;\n        let vehicles;\n        let starships;\n\n        if (character) {\n            content = (\n                <div className=\"card row\" style={{ height: 390 }} >\n                    <img src={image} alt=\"image\" className=\"card-img-top image-fluid col-6 p-0\" style={{ height: 350 }} />\n                    <h5 className=\"card-title\">{character.name}</h5>\n                    <div className=\"card-body text-left col-6\">\n                        <p>height: {character.height}</p>\n                        <p>mass: {character.mass}</p>\n                        <p>birth year: {character.birth_year}</p>\n                        <p>gender: {character.gender}</p>\n                        <p>Hair color: {character.hair_color}</p>\n                        <p>Skin color: {character.skin_color}</p>\n                        <p>Eye color: {character.eye_color}</p>\n                        <p>Homeworld: <Name url={character.homeworld} /> </p>\n                    </div>\n                </div >\n            );\n            films = (\n                <div className=\"card\">\n                    <h5>Appeared in film:</h5>\n                    <div>\n                        {character.films.map((url, idx) => {\n                            return (\n                                <div>\n                                    <Film filmUrl={url} key={idx} />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            );\n            vehicles = (\n                <div className=\"card\">\n                    <h5>Vehicles:</h5>\n                    {(character.vehicles.length !== 0) ? (<div> {character.vehicles.map((url, idx) => {\n                        return (\n                            <div>\n                                <Name url={url} key={idx} />\n                            </div>\n                        )\n                    })}</div>) : (<div> none</div>)}\n                </div>\n            )\n            starships = (\n                <div className=\"card\">\n                    <h5>Starships:</h5>\n                    {(character.starships.length !== 0) ? (<div> {character.starships.map((url, idx) => {\n                        return (\n                            <div>\n                                <Name url={url} key={idx} />\n                            </div>\n                        )\n                    })}</div>) : (<div> none</div>)}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"row\">\n                {isLoading && <p>Loading...</p>}\n                {error && <p>Error. Please refresh and try again</p>}\n                <div className=\"col-5 ml-auto\">\n                    {content}\n                </div>\n                <div className=\"col-5 mr-auto text-left\">\n                    {films}\n                    {vehicles}\n                    {starships}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Character);\n","import { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport CharacterList from './CharacterList.js';\nimport Character from './Character.js'\n\nfunction CharacterApp() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav>\n          <Link to=\"/\">Home</Link>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <h1 className=\"text-light\">Star Wars Character List</h1>\n            <CharacterList />\n          </Route>\n          <Route path=\"/character/:id\">\n            <h1 className=\"text-center text-light\">Character Info</h1>\n            <Character />\n          </Route>\n          <Route path=\"*\">\n            <h1>404</h1>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default CharacterApp;\n","import CharacterApp from './CharacterApp/CharacterApp.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CharacterApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}